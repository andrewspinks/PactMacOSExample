{
  "consumer": {
    "name": "Animal Consumer Swift"
  },
  "provider": {
    "name": "Animal Service"
  },
  "interactions": [
    {
      "description": "a request for a character",
      "request": {
        "method": "get",
        "path": "/people/3/"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "vehicles": [
            "https://swapi.co/api/vehicles/14/",
            "https://swapi.co/api/vehicles/30/"
          ],
          "name": "Luke Skywalker",
          "url": "https://swapi.co/api/people/1/",
          "films": [
            "https://swapi.co/api/films/2/",
            "https://swapi.co/api/films/6/",
            "https://swapi.co/api/films/3/",
            "https://swapi.co/api/films/1/",
            "https://swapi.co/api/films/7/"
          ],
          "mass": "77",
          "gender": "male",
          "eye_color": "blue",
          "height": "172",
          "hair_color": "blond",
          "created": "2014-12-09T13:50:51.644000Z",
          "edited": "2014-12-20T21:17:56.891000Z",
          "skin_color": "fair",
          "starships": [
            "https://swapi.co/api/starships/12/",
            "https://swapi.co/api/starships/22/"
          ],
          "birth_year": "19BBY",
          "species": [
            "https://swapi.co/api/species/1/"
          ],
          "homeworld": "https://swapi.co/api/planets/1/"
        }
      }
    },
    {
      "description": "a request for all alligators",
      "providerState": "an alligator exists",
      "request": {
        "method": "get",
        "path": "/alligators"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "body": [
          {
            "type": "alligator",
            "name": "Mary"
          }
        ]
      }
    },
    {
      "description": "a request for an alligator with path matcher",
      "providerState": "an alligator exists",
      "request": {
        "method": "get",
        "path": "/alligators/1234",
        "matchingRules": {
          "$.path": {
            "match": "regex",
            "regex": "^\\/alligators\\/[0-9]{4}"
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "type": "alligator",
          "name": "Mary"
        }
      }
    },
    {
      "description": "a request for animals living in water",
      "providerState": "an alligator exists",
      "request": {
        "method": "get",
        "path": "/animals",
        "query": "live=water"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "body": [
          {
            "type": "alligator",
            "name": "Mary"
          }
        ]
      }
    },
    {
      "description": "a request for animals living in water with dictionary matcher",
      "providerState": "an alligator exists",
      "request": {
        "method": "get",
        "path": "/animals",
        "query": "live=water",
        "matchingRules": {
          "$.query.live[0]": {
            "match": "type"
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "body": [
          {
            "type": "alligator",
            "name": "Mary"
          }
        ]
      }
    },
    {
      "description": "a request for animals living in water with matcher",
      "providerState": "an alligator exists",
      "request": {
        "method": "get",
        "path": "/animals",
        "query": "live=water",
        "matchingRules": {
          "$.query": {
            "match": "regex",
            "regex": "live=*"
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "body": [
          {
            "type": "alligator",
            "name": "Mary"
          }
        ]
      }
    },
    {
      "description": "a request for an alligator with header matcher",
      "providerState": "an alligator exists",
      "request": {
        "method": "get",
        "path": "/alligators",
        "headers": {
          "Authorization": "OIOIUOIU"
        },
        "matchingRules": {
          "$.headers.Authorization": {
            "match": "type"
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json",
          "Etag": "x234"
        },
        "body": {
          "type": "alligator",
          "name": "Mary"
        },
        "matchingRules": {
          "$.headers.Etag": {
            "match": "type"
          }
        }
      }
    },
    {
      "description": "a request eat a pidgeon",
      "providerState": "Alligators and pidgeons exist",
      "request": {
        "method": "patch",
        "path": "/alligator/eat",
        "body": {
          "type": "pidgeon"
        }
      },
      "response": {
        "status": 204,
        "headers": {
          "Content-Type": "application/json"
        }
      }
    },
    {
      "description": "a request to no longer eat pidgeons",
      "providerState": "Alligators don't eat pidgeons",
      "request": {
        "method": "delete",
        "path": "/alligator/eat",
        "body": {
          "type": "pidgeon"
        }
      },
      "response": {
        "status": 404,
        "headers": {
        },
        "body": "No relationship"
      }
    },
    {
      "description": "a request to eat",
      "providerState": "alligators don't each pidgeons",
      "request": {
        "method": "patch",
        "path": "/alligator/eat",
        "body": {
          "type": "pidgeon"
        }
      },
      "response": {
        "status": 204,
        "headers": {
          "Content-Type": "application/json"
        }
      }
    },
    {
      "description": "what alligators eat",
      "request": {
        "method": "get",
        "path": "/alligator/eat"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "body": [
          {
            "type": "pidgeon",
            "name": "Joseph"
          }
        ],
        "matchingRules": {
          "$.body[0].type": {
            "match": "type"
          }
        }
      }
    },
    {
      "description": "a request for alligator with birthdate",
      "providerState": "an alligator exists with a birthdate",
      "request": {
        "method": "get",
        "path": "/alligators/123"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "type": "alligator",
          "name": "Mary",
          "dateOfBirth": "02/02/1999"
        },
        "matchingRules": {
          "$.body.dateOfBirth": {
            "match": "regex",
            "regex": "\\d{2}\\/\\d{2}\\/\\d{4}"
          }
        }
      }
    },
    {
      "description": "a request for alligator with legs",
      "providerState": "an alligator exists with legs",
      "request": {
        "method": "get",
        "path": "/alligators/1"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "type": "alligator",
          "name": "Mary",
          "legs": 4
        },
        "matchingRules": {
          "$.body.legs": {
            "match": "type"
          }
        }
      }
    },
    {
      "description": "a request for animals living on land",
      "providerState": "multiple land based animals exist",
      "request": {
        "method": "get",
        "path": "/animals",
        "query": "live=land"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "body": [
          {
            "type": "wombat",
            "name": "Bruce"
          }
        ],
        "matchingRules": {
          "$.body": {
            "min": 1
          },
          "$.body[*].*": {
            "match": "type"
          }
        }
      }
    }
  ],
  "metadata": {
    "pactSpecification": {
      "version": "2.0.0"
    }
  }
}